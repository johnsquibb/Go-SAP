package asm

import (
	"Go-SAP3/machine/op"
	"Go-SAP3/machine/types"
)

// Mnemonics are textual representations of OpCode constants.
// Strings are 8080/8085 compatible.
var Mnemonics = map[string]types.Word{
	"ACI":      op.ACI,
	"ADC A":    op.ADC_A,
	"ADC B":    op.ADC_B,
	"ADC C":    op.ADC_C,
	"ADC D":    op.ADC_D,
	"ADC E":    op.ADC_E,
	"ADC H":    op.ADC_H,
	"ADC L":    op.ADC_L,
	"ADC M":    op.ADC_M,
	"ADD A":    op.ADD_A,
	"ADD B":    op.ADD_B,
	"ADD C":    op.ADD_C,
	"ADD D":    op.ADD_D,
	"ADD E":    op.ADD_E,
	"ADD H":    op.ADD_H,
	"ADD L":    op.ADD_L,
	"ADD M":    op.ADD_M,
	"ADI":      op.ADI,
	"ANA A":    op.ANA_A,
	"ANA B":    op.ANA_B,
	"ANA C":    op.ANA_C,
	"ANA D":    op.ANA_D,
	"ANA E":    op.ANA_E,
	"ANA H":    op.ANA_H,
	"ANA L":    op.ANA_L,
	"ANA M":    op.ANA_M,
	"ANI":      op.ANI,
	"CALL":     op.CALL,
	"CC":       op.CC,
	"CM":       op.CM,
	"CMA":      op.CMA,
	"CMC":      op.CMC,
	"CMP A":    op.CMP_A,
	"CMP B":    op.CMP_B,
	"CMP C":    op.CMP_C,
	"CMP D":    op.CMP_D,
	"CMP E":    op.CMP_E,
	"CMP H":    op.CMP_H,
	"CMP L":    op.CMP_L,
	"CMP M":    op.CMP_M,
	"CNC":      op.CNC,
	"CNZ":      op.CNZ,
	"CP":       op.CP,
	"CPE":      op.CPE,
	"CPI":      op.CPI,
	"CPO":      op.CPO,
	"CZ":       op.CZ,
	"DAD B":    op.DAD_B,
	"DAD D":    op.DAD_D,
	"DAD H":    op.DAD_H,
	"DCR A":    op.DCR_A,
	"DCR B":    op.DCR_B,
	"DCR C":    op.DCR_C,
	"DCR D":    op.DCR_D,
	"DCR E":    op.DCR_E,
	"DCR H":    op.DCR_H,
	"DCR L":    op.DCR_L,
	"DCR M":    op.DCR_M,
	"DCX B":    op.DCX_B,
	"DCX D":    op.DCX_D,
	"DCX H":    op.DCX_H,
	"DCX SP":   op.DCX_SP,
	"HLT":      op.HLT,
	"IN":       op.IN,
	"INR A":    op.INR_A,
	"INR B":    op.INR_B,
	"INR C":    op.INR_C,
	"INR D":    op.INR_D,
	"INR E":    op.INR_E,
	"INR H":    op.INR_H,
	"INR L":    op.INR_L,
	"INR M":    op.INR_M,
	"INX B":    op.INX_B,
	"INX D":    op.INX_D,
	"INX H":    op.INX_H,
	"INX SP":   op.INX_SP,
	"JC":       op.JC,
	"JM":       op.JM,
	"JMP":      op.JMP,
	"JNC":      op.JNC,
	"JNZ":      op.JNZ,
	"JP":       op.JP,
	"JPE":      op.JPE,
	"JPO":      op.JPO,
	"JZ":       op.JZ,
	"LDA":      op.LDA,
	"LDAX B":   op.LDAX_B,
	"LDAX D":   op.LDAX_D,
	"LHLD":     op.LHLD,
	"LXI B":    op.LXI_B,
	"LXI D":    op.LXI_D,
	"LXI H":    op.LXI_H,
	"LXI SP":   op.LXI_SP,
	"MOV A,A":  op.MOV_A_A,
	"MOV A,B":  op.MOV_A_B,
	"MOV A,C":  op.MOV_A_C,
	"MOV A,D":  op.MOV_A_D,
	"MOV A,E":  op.MOV_A_E,
	"MOV A,H":  op.MOV_A_H,
	"MOV A,L":  op.MOV_A_L,
	"MOV A,M":  op.MOV_A_M,
	"MOV B,A":  op.MOV_B_A,
	"MOV B,B":  op.MOV_B_B,
	"MOV B,C":  op.MOV_B_C,
	"MOV B,D":  op.MOV_B_D,
	"MOV B,E":  op.MOV_B_E,
	"MOV B,H":  op.MOV_B_H,
	"MOV B,L":  op.MOV_B_L,
	"MOV B,M":  op.MOV_B_M,
	"MOV C,A":  op.MOV_C_A,
	"MOV C,B":  op.MOV_C_B,
	"MOV C,C":  op.MOV_C_C,
	"MOV C,D":  op.MOV_C_D,
	"MOV C,E":  op.MOV_C_E,
	"MOV C,H":  op.MOV_C_H,
	"MOV C,L":  op.MOV_C_L,
	"MOV C,M":  op.MOV_C_M,
	"MOV D,A":  op.MOV_D_A,
	"MOV D,B":  op.MOV_D_B,
	"MOV D,C":  op.MOV_D_C,
	"MOV D,D":  op.MOV_D_D,
	"MOV D,E":  op.MOV_D_E,
	"MOV D,H":  op.MOV_D_H,
	"MOV D,L":  op.MOV_D_L,
	"MOV D,M":  op.MOV_D_M,
	"MOV E,A":  op.MOV_E_A,
	"MOV E,B":  op.MOV_E_B,
	"MOV E,C":  op.MOV_E_C,
	"MOV E,D":  op.MOV_E_D,
	"MOV E,E":  op.MOV_E_E,
	"MOV E,H":  op.MOV_E_H,
	"MOV E,L":  op.MOV_E_L,
	"MOV E,M":  op.MOV_E_M,
	"MOV H,A":  op.MOV_H_A,
	"MOV H,B":  op.MOV_H_B,
	"MOV H,C":  op.MOV_H_C,
	"MOV H,D":  op.MOV_H_D,
	"MOV H,E":  op.MOV_H_E,
	"MOV H,H":  op.MOV_H_H,
	"MOV H,L":  op.MOV_H_L,
	"MOV H,M":  op.MOV_H_M,
	"MOV L,A":  op.MOV_L_A,
	"MOV L,B":  op.MOV_L_B,
	"MOV L,C":  op.MOV_L_C,
	"MOV L,D":  op.MOV_L_D,
	"MOV L,E":  op.MOV_L_E,
	"MOV L,H":  op.MOV_L_H,
	"MOV L,L":  op.MOV_L_L,
	"MOV L,M":  op.MOV_L_M,
	"MOV M,A":  op.MOV_M_A,
	"MOV M,B":  op.MOV_M_B,
	"MOV M,C":  op.MOV_M_C,
	"MOV M,D":  op.MOV_M_D,
	"MOV M,E":  op.MOV_M_E,
	"MOV M,H":  op.MOV_M_H,
	"MOV M,L":  op.MOV_M_L,
	"MVI A":    op.MVI_A,
	"MVI B":    op.MVI_B,
	"MVI C":    op.MVI_C,
	"MVI D":    op.MVI_D,
	"MVI E":    op.MVI_E,
	"MVI H":    op.MVI_H,
	"MVI L":    op.MVI_L,
	"MVI M":    op.MVI_M,
	"NOP":      op.NOP,
	"ORA A":    op.ORA_A,
	"ORA B":    op.ORA_B,
	"ORA C":    op.ORA_C,
	"ORA D":    op.ORA_D,
	"ORA E":    op.ORA_E,
	"ORA H":    op.ORA_H,
	"ORA L":    op.ORA_L,
	"ORA M":    op.ORA_M,
	"ORI":      op.ORI,
	"OUT":      op.OUT,
	"POP B":    op.POP_B,
	"POP D":    op.POP_D,
	"POP H":    op.POP_H,
	"POP PSW":  op.POP_PSW,
	"PUSH B":   op.PUSH_B,
	"PUSH D":   op.PUSH_D,
	"PUSH H":   op.PUSH_H,
	"PUSH PSW": op.PUSH_PSW,
	"RAL":      op.RAL,
	"RAR":      op.RAR,
	"RC":       op.RC,
	"RET":      op.RET,
	"RLC":      op.RLC,
	"RM":       op.RM,
	"RNC":      op.RNC,
	"RNZ":      op.RNZ,
	"RP":       op.RP,
	"RPE":      op.RPE,
	"RPO":      op.RPO,
	"RRC":      op.RRC,
	"RZ":       op.RZ,
	"SBB A":    op.SBB_A,
	"SBB B":    op.SBB_B,
	"SBB C":    op.SBB_C,
	"SBB D":    op.SBB_D,
	"SBB E":    op.SBB_E,
	"SBB H":    op.SBB_H,
	"SBB L":    op.SBB_L,
	"SBB M":    op.SBB_M,
	"SBI":      op.SBI,
	"SHLD":     op.SHLD,
	"STA":      op.STA,
	"STAX B":   op.STAX_B,
	"STAX D":   op.STAX_D,
	"STC":      op.STC,
	"SUB A":    op.SUB_A,
	"SUB B":    op.SUB_B,
	"SUB C":    op.SUB_C,
	"SUB D":    op.SUB_D,
	"SUB E":    op.SUB_E,
	"SUB H":    op.SUB_H,
	"SUB L":    op.SUB_L,
	"SUB M":    op.SUB_M,
	"SUI":      op.SUI,
	"XCHG":     op.XCHG,
	"XRA A":    op.XRA_A,
	"XRA B":    op.XRA_B,
	"XRA C":    op.XRA_C,
	"XRA D":    op.XRA_D,
	"XRA E":    op.XRA_E,
	"XRA H":    op.XRA_H,
	"XRA L":    op.XRA_L,
	"XRA M":    op.XRA_M,
	"XRI":      op.XRI,
}
