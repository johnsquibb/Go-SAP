package opcodes

import (
	"Go-SAP3/machine/op"
	"Go-SAP3/machine/types"
)

// LiteralInstructions is the list of OpCode(s) that do not reference a memory address or supply a byte.
var LiteralInstructions = []types.Word{
	op.ADC_A,
	op.ADC_B,
	op.ADC_C,
	op.ADC_D,
	op.ADC_E,
	op.ADC_H,
	op.ADC_L,
	op.ADC_M,
	op.ADD_A,
	op.ADD_B,
	op.ADD_C,
	op.ADD_D,
	op.ADD_E,
	op.ADD_H,
	op.ADD_L,
	op.ADD_M,
	op.ANA_A,
	op.ANA_B,
	op.ANA_C,
	op.ANA_D,
	op.ANA_E,
	op.ANA_H,
	op.ANA_L,
	op.ANA_M,
	op.CMA,
	op.CMC,
	op.CMP_A,
	op.CMP_B,
	op.CMP_C,
	op.CMP_D,
	op.CMP_E,
	op.CMP_H,
	op.CMP_L,
	op.CMP_M,
	op.DAD_B,
	op.DAD_D,
	op.DAD_H,
	op.DCR_A,
	op.DCR_B,
	op.DCR_C,
	op.DCR_D,
	op.DCR_E,
	op.DCR_H,
	op.DCR_L,
	op.DCR_M,
	op.DCX_B,
	op.DCX_D,
	op.DCX_H,
	op.HLT,
	op.INR_A,
	op.INR_B,
	op.INR_C,
	op.INR_D,
	op.INR_E,
	op.INR_H,
	op.INR_L,
	op.INR_M,
	op.INX_B,
	op.INX_D,
	op.INX_H,
	op.LDAX_B,
	op.LDAX_D,
	op.MOV_A_A,
	op.MOV_A_B,
	op.MOV_A_C,
	op.MOV_A_D,
	op.MOV_A_E,
	op.MOV_A_H,
	op.MOV_A_L,
	op.MOV_A_M,
	op.MOV_B_A,
	op.MOV_B_B,
	op.MOV_B_C,
	op.MOV_B_D,
	op.MOV_B_E,
	op.MOV_B_H,
	op.MOV_B_L,
	op.MOV_B_M,
	op.MOV_C_A,
	op.MOV_C_B,
	op.MOV_C_C,
	op.MOV_C_D,
	op.MOV_C_E,
	op.MOV_C_H,
	op.MOV_C_L,
	op.MOV_C_M,
	op.MOV_D_A,
	op.MOV_D_B,
	op.MOV_D_C,
	op.MOV_D_D,
	op.MOV_D_E,
	op.MOV_D_H,
	op.MOV_D_L,
	op.MOV_D_M,
	op.MOV_E_A,
	op.MOV_E_B,
	op.MOV_E_C,
	op.MOV_E_D,
	op.MOV_E_E,
	op.MOV_E_H,
	op.MOV_E_L,
	op.MOV_E_M,
	op.MOV_H_A,
	op.MOV_H_B,
	op.MOV_H_C,
	op.MOV_H_D,
	op.MOV_H_E,
	op.MOV_H_H,
	op.MOV_H_L,
	op.MOV_H_M,
	op.MOV_L_A,
	op.MOV_L_B,
	op.MOV_L_C,
	op.MOV_L_D,
	op.MOV_L_E,
	op.MOV_L_H,
	op.MOV_L_L,
	op.MOV_L_M,
	op.MOV_M_A,
	op.MOV_M_B,
	op.MOV_M_C,
	op.MOV_M_D,
	op.MOV_M_E,
	op.MOV_M_H,
	op.MOV_M_L,
	op.NOP,
	op.ORA_A,
	op.ORA_B,
	op.ORA_C,
	op.ORA_D,
	op.ORA_E,
	op.ORA_H,
	op.ORA_L,
	op.ORA_M,
	op.POP_B,
	op.POP_D,
	op.POP_H,
	op.POP_PSW,
	op.PUSH_B,
	op.PUSH_D,
	op.PUSH_H,
	op.PUSH_PSW,
	op.RAL,
	op.RAR,
	op.RC,
	op.RET,
	op.RLC,
	op.RM,
	op.RNC,
	op.RNZ,
	op.RP,
	op.RPE,
	op.RPO,
	op.RRC,
	op.RZ,
	op.SBB_A,
	op.SBB_B,
	op.SBB_C,
	op.SBB_D,
	op.SBB_E,
	op.SBB_H,
	op.SBB_L,
	op.SBB_M,
	op.STAX_B,
	op.STAX_D,
	op.STC,
	op.SUB_A,
	op.SUB_B,
	op.SUB_C,
	op.SUB_D,
	op.SUB_E,
	op.SUB_H,
	op.SUB_L,
	op.SUB_M,
	op.XRA_A,
	op.XRA_B,
	op.XRA_C,
	op.XRA_D,
	op.XRA_E,
	op.XRA_H,
	op.XRA_L,
	op.XRA_M,
}
